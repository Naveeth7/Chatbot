name: Chatbot

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22

      - name: Install dependencies
        run: go mod tidy

      - name: Run tests
        run: go test ./... -v

      - name: Run tests with coverage
        run: |
          go test ./... -coverprofile=coverage.out
          go tool cover -func=coverage.out | tee coverage.txt
          total=$(go tool cover -func=coverage.out | grep total: | awk '{print substr($3, 1, length($3)-1)}')
          echo "Total Coverage: $total%"
          threshold=96.0
          result=$(echo "$total >= $threshold" | bc)
          if [ "$result" -ne 1 ]; then
            echo "‚ùå Coverage $total% is below the threshold of $threshold%"
            exit 1
          fi

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

      - name: Build Docker image
        run: docker build -t naveeth007/chatbot:latest .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: docker push naveeth007/chatbot:latest

  jobs:
    scan:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4

        - name: Run gosec
          uses: securego/gosec@master
          with:
            args: ./...

        - name: Dependency audit
          run: go mod download && go list -json -m all | nancy sleuth
