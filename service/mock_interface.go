// Code generated by MockGen. DO NOT EDIT.
// Source: service/interface.go

// Package service is a generated GoMock package.
package service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBotService is a mock of BotService interface.
type MockBotService struct {
	ctrl     *gomock.Controller
	recorder *MockBotServiceMockRecorder
}

// MockBotServiceMockRecorder is the mock recorder for MockBotService.
type MockBotServiceMockRecorder struct {
	mock *MockBotService
}

// NewMockBotService creates a new mock instance.
func NewMockBotService(ctrl *gomock.Controller) *MockBotService {
	mock := &MockBotService{ctrl: ctrl}
	mock.recorder = &MockBotServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBotService) EXPECT() *MockBotServiceMockRecorder {
	return m.recorder
}

// GetReply mocks base method.
func (m *MockBotService) GetReply(input string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetReply", input)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetReply indicates an expected call of GetReply.
func (mr *MockBotServiceMockRecorder) GetReply(input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetReply", reflect.TypeOf((*MockBotService)(nil).GetReply), input)
}
